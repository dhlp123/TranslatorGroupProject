#BlueJ class context
comment0.params=
comment0.target=DictionaryTree()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ DictionaryTree\r\n
comment1.params=
comment1.target=WordNode\ getRoot()
comment1.text=\r\n\ Get\ the\ root\ of\ the\ tree\r\n\ \r\n\ @return\ root\ reference\ to\ WordNode\ object\r\n
comment2.params=newRoot
comment2.target=void\ setRoot(WordNode)
comment2.text=\r\n\ Set\ the\ root\ of\ the\ tree\ to\ the\ given\ node\r\n\ \r\n\ @param\ \ newRoot\ \ reference\ to\ a\ WordNode\ object\ which\ will\ be\ the\ root\r\n\ @return\ \ None\r\n
comment3.params=ID\ english\ french
comment3.target=boolean\ addToTree(java.lang.String,\ java.lang.String,\ java.lang.String)
comment3.text=\r\n\ Add\ a\ new\ node\ to\ the\ tree\ which\ will\ contain\ the\ data\ provided\ ().\r\n\ \r\n\ @param\ \ ID\ \ \ integer,\ ID\ of\ the\ word\ \ \ \ \ \ \ \r\n\ @param\ \ english,\ french\ \ Strings\ holding\ a\ word\ and\ its\ translation\ respectively\ \ \ \ \ \r\n\ @return\ boolean\ \ shows\ whether\ word\ has\ been\ added\ successfully\ or\ not\r\n
comment4.params=
comment4.target=void\ displayTree()
comment4.text=\r\n\ Print\ contents\ of\ the\ tree\r\n\ \r\n\ @param\ None\r\n\ @return\ None\r\n
comment5.params=processNode
comment5.target=void\ traverseTree(WordNode)
comment5.text=\r\n\ Traverse\ throught\ the\ tree\ inorder\r\n\ \r\n\ @param\ \ processNode\ \ Node\ that\ is\ being\ processed\r\n\ @return\ None\r\n
comment6.params=id
comment6.target=WordNode\ searchTree(java.lang.String)
comment6.text=\r\n\ Find\ a\ translation\ by\ searching\ for\ a\ word\r\n\ \r\n\ @param\ id\ \ \ \ \ holds\ word\ that\ is\ being\ searched\ for\r\n\ @return\ word\ \ returns\ translation\ or\ deafult\ 'false'\ value\r\n
comment7.params=
comment7.target=boolean\ isTreeEmpty()
comment7.text=\r\n\ Method\ that\ determines\ whether\ the\ tree\ is\ empty\r\n\ \r\n\ @param\ \ None\r\n\ @return\ Boolean\ -\ whether\ tree\ is\ empty\ or\ not\r\n
comment8.params=id
comment8.target=boolean\ removeFromTree(java.lang.String)
comment8.text=\r\n\ Method\ to\ delete\ nodes\ from\ the\ tree\r\n\ \r\n\ @param\ \ \ id\ \ \ \ \ \ Holds\ ID\ of\ the\ word\ to\ be\ deleted\ \r\n\ @return\ Boolean\ \ whether\ deleted\ successfully\ or\ not\r\n
numComments=9
